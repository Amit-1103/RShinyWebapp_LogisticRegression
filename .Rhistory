erase.screen()
erase.screen(T)
erase.console
erase.console()
erase.screen(TRUE)
y<-erase.screen(TRUE)
y
clearPushBack()
clearPushBack(T)
clear.screen()
print(j)
j <- list(name="jhon", salary=5000, union = T)
class(j) <- "employee"
attributes(j)
print(j)
j
print.employee <- function(worker){
cat(worker$name,"\n")
cat("Salary is ",worker$salary,"\n")
cat("Union Member",worker$union,"\n")
}
worker()
employee.worker()
employee
print.employee
methods(print.employee(worker),"class")
methods(print.employee,"class")
methods(,"class")
j
methods(print.j,"class")
j
methods(,"employee")
methods( ,"employee")
?methods( ,"employee")
?methods(summary)
methods(summary)
k <- list(name="jhon", salary=5000, union = T, hrsthismonth = 3)
class(k) <- c("hrs","employee")
k
a=2
b=-1
c=-4
x1=(-b+sqrt(b^2-4*a*c))/2*a
x2=(-b-sqrt(b^2-4*a*c))/2*a
x1
x2
log(1024,4)
log(100,10)
x <- movielens
install.packages("dslabs")
library(dslabs)
x <- movielens
nlevels(x$generes)
nlevels(x$genres)
x
str(x)
type(x$title)
typeof(x$title)
x1=(-b+sqrt(b^2-4*a*c))/(2*a)
x2=(-b-sqrt(b^2-4*a*c))/(2*a)
name <- c("Mandi", "Amy", "Nicole", "Olivia")
distance <- c(0.8, 3.1, 2.8, 4.0)
time <- c(10, 30, 40, 50)
time <- time/60
speed <- distance/time
time
speed
library(dslabs)
data(heights)
data
heights
mean(height)
mean(heights$height)
ind <- which(heights$height > mean)
ind <- heights$height > mean)
ind <- heights$height > mean
m <- mean(heights$height)
ind <- m < heights$height
ind
sum(ind)
ind <- m < heights$height & heights$sex == "Female"
ind
sum(ind)
ind <- heights$sex == "Female"
ind
mean(ind)
min(heights$height)
match(min(heights$height),heights)
mini <- min(heights$height)
match(mini,heights)
match(mini,heights$sex)
match(mini,heights$height)
heights$sex[1032]
maxi <- max(heights$height)
x <- 50:82
length(x)
sum(x)
sum(!(x %in% heights$height))
library(dplyr)
ht_cm <- heights$height * 2.54
heights2 <- mutate(ht_cm,heights)
heights2$ht_cm[18]
heights2 <- mutate(ht_cm,data = heights)
mutate(ht_cm,data = heights)
mutate(as.numeric(ht_cm),data = heights)
library(dplyr)
mutate(as.numeric(ht_cm),data = heights)
mutate(ht_cm,data = heights)
mutate(data = heights,ht_cm)
mutate(heights,ht_cm)
heights2 <- mutate(heights,ht_cm)
heights2$ht_cm[18]
mean(heights2$ht_cm)
ind <- heights2$sex == "Female"
sum(ind)
filter(heights2,heights2$sex=="Female")
mean(heights2$ht_cm) %in% filter(heights2,heights2$sex=="Female")
mean(heights2$ht_cm) %>% filter(heights2,heights2$sex=="Female")
mean(heights2$ht_cm) %>% filter(heights2$sex=="Female")
mean(heights2$ht_cm) %>% filter(heights2$sex=="Female",heights2)
mean(heights2$ht_cm) %>% filter(sex.heights=="Female")
filter(sex.heights=="Female")
filter(sex.heights2=="Female")
filter(heights2$sex=="Female")
filter(heights2,heights2$sex=="Female")
mean(heights2$ht_cm) %<% filter(heights2,heights2$sex=="Female")
mean(heights2$ht_cm) %>% filter(heights2,heights2$sex=="Female")
filter(heights2,heights2$sex=="Female") %>% mean(heights2$ht_cm)
filter(heights2,heights2$sex=="Female") %>% mean(ht_cm)
filter(heights2,heights2$sex=="Female") %>% select(ht_cm) %>% mean(ht_cm)
filter(heights2,heights2$sex=="Female") %>% select(ht_cm)
t <- filter(heights2,heights2$sex=="Female") %>% select(ht_cm)
mean(t)
t
mean(t)
mean(as.numeric(t))
mean(which(ht_cm,heights2$sex="Female"))
mean(which(ht_cm,heights2$sex=="Female"))
mean(ht_cm,heights2$sex=="Female")
mean(ht_cm,which(heights2$sex=="Female"))
t <- as.numeric(t)
t <- filter(heights2,heights2$sex=="Female") %>% select(ht_cm) %>% mean(ht_cm)
t <- heights2 %>% select(sex,ht_cm) %>% filter(sex=="Female") %>% mean(ht_cm)
t <- select(heights2 %>% select(sex,ht_cm) %>% filter(sex=="Female") %>% mean(ht_cm))
t <- select(heights2,sex,ht_cm)
t %>% filter(sex=="Female") %>% mean(ht_cm)
t <- select(heights2,which(sex=="Female"),ht_cm)
t <- select(heights2,which(heights2$sex=="Female"),ht_cm)
mean(ht_cm)
mean(heights2$ht_cm)
filter(heights2$sex=="Female") %>% mean(heights2$ht_cm)
filter(heights2$sex=="Female")
filter(heights2,heights2$sex=="Female")
filter(heights2,heights2$sex=="Female") %>% mean(heights2$ht_cm)
filter(heights2,heights2$sex=="Female") %in% mean(heights2$ht_cm)
filter(heights2,heights2$sex=="Female") %% mean(heights2$ht_cm)
mean(heights2$ht_cm)
filter(heights2,heights2$sex=="Female")
ifelse(heights2$sex=="Female",mean(heights2$ht_cm))
ifelse(heights2$sex=="Female",mean(heights2$ht_cm),5)
r<-c(18,11,7,23,6)
r1<-c(25,27,13,30,10)
plot(r,r1)
plot(r,type="o")
data <- olive
head(data)
plot(data$palmitic,data$palmitoleic)
hist(data$eicosenoic)
boxplot(region~palmitic,data=olive)
boxplot(palmitic~region,data=olive)
mean(heights2$ht_cm[ind])
a <- ifelse(heights$sex=="Female",1,2)
sum(a)
a <- ifelse(heights$height>72,heights$height,0)
mean(a)
i <- heights2$height < 60
i
sum(i)
setClass("emp", representation(name="character", salary="numeric", union="logical"))
ram <- new("emp", name="shyam", salary=20000, union=T)
ram
ram <- new("emp", name="shyam", salary=20000, union=T)
ram
ram@name
slot(ram,"salary")
ram@name <- "ram"
ram@name
ram
show(ram)
setMethod("show", "emp", function(object){
t <- ifelse(object@union, "is", "is not")
cat(object@name, "has salary of", object@salary, "and", t, "in the union", "\n")
})
ram
ram@union <- F
show(ram)
ls()
ls(pattern="ra")
library(dplyr)
subset(mydata,murders>500)
mydata <- read.csv('murders.csv')
mydat <- murders
library(dslabs)
mydat <- murders
subset(mydat,murders>500)
mydat
subset(mydat,total>500)
n=2
sum=0
for(i in 1:11){
sum=sum+(i^2)
if (i %% 2 !=0)
next
print(c(month.abb[i+1],sum))
}
n=8
x = seq(1,n,2)
for (i in x) {
if (i == 5){
print(i)
break
}
}
install.packages("shiny")
install.packages("shiny")
install.packages("shinythemes")
shiny::runApp('myfirst')
runApp('myfirst')
library(sshiny)
library(shinythemes)
# UI
ui <- fluidPage(theme = shinytheme("cosmo"),
navbarPage(
"My First Shiny Web App",
tabPanel("Navbar 1"),
tabpanel("Navbar 2"),
tabpanel("Navbar 3")
)
)
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/R Programming')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/R Programming')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/R Programming')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/R Programming')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/R Programming')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/R Programming')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/R Programming')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/R Programming')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/R Programming')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/R Programming')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/R Programming')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/R Programming')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/R Programming')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/R Programming')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/R Programming')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/R Programming')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/R Programming')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/R Programming')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/R Programming')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/R Programming')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/R Programming')
install.packages('rsconnect')
rsconnect::setAccountInfo(name='sofinwebapp',
token='63EE0F03798CFB9F7BA7A1F629FE1EEE',
secret='<SECRET>')
rsconnect::setAccountInfo(name='sofinwebapp',
token='63EE0F03798CFB9F7BA7A1F629FE1EEE',
secret='IQTh67q7Os2BCM/oiHdiaKHA01Do+5QFkneNzTRJ')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/R Programming')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/R Programming')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/R Programming')
data(cars)
cars
hist(cars$speed, main = "Car Speed", xlab = "Car Speed")
plot(speed ~ dist, data = cars)
plot(cars$speed, cars$dist)
data(mtcars)
boxplot(mtcars$mpg)
boxplot(cars$speed)
library(ggplot2)
ggplot(data = cars) + geom_histogram(aes(x = speed))
ggplot(data = mtcars) + geom_density(aes(x = mpg))
mtcars
ggplot(diamonds, aes(x = mpg, y = cyl)) + geom_point()
ggplot(mtcars, aes(x = mpg, y = cyl)) + geom_point()
ggplot(mtcars, aes(x = mpg, y = disp)) + geom_point()
g <- ggplot(cars, aes(x = speed, y = dist))
g + geom_point(aes(color = color))
g + geom_point(aes(color = green))
g + geom_point(aes(color = color))
g + geom_point(aes(color = red))
g + geom_point(aes(color = Red))
g + geom_point()
g + geom_point() + facet_wrap(~color)
g + geom_point(aes(color = color)) + facet_wrap(~color)
g + geom_point(aes(color = red)) + facet_wrap(~color)
g + geom_point() + facet_wrap(~speed)
g + geom_point() + facet_grid(dist ~ speed)
g + geom_point() + facet_grid(speed~dist)
g + geom_point() + facet_grid(~speed)
exiting()
g + geom_point() + facet_grid(~speed)
ggplot(mtcars, aes(x = hp)) + geom_histogram() + facet_wrap(~cyl)
ggplot(mtcars, aes(x = hp)) + geom_histogram() + facet_wrap(~mpg)
ggplot(cars, aes(y = dist, x = 1)) + geom_boxplot()
ggplot(cars, aes(y = dist, x = speed)) + geom_boxplot()
ggplot(cars, aes(y = dist, x = speed)) + geom_violin()
ggplot(mtcars, aes(y = cyl, x = hp)) + geom_point() + geom_violin()
ggplot(mtcars, aes(y = cyl, x = hp)) + geom_violin() + geom_point()
ggplot(cars, aes(y = dist, x = speed)) + geom_violin() + geom_point()
library(glmnet) #Used for all the modelling functions
set.seed(42) #Random number generator
n <- 1000 # Dataset made up of 1000 samples
p <- 5000 #5000 parameters to estimate
real_p <- 15 #Only 15 parameters will help us predict the outcome rest will be random noise
x <- matrix(rnorm(n*p),nrow = n,ncol = p) # A matrix full of randomly generated
#data, values in the matrix come from a standard normal distribution
y <- apply(x[,1:real_p],1,sum) + rnorm(n) # y is a vector dependant on first 15 cols
#of x plus a little noise
train_rows <- sample(1:n,0.66*n) #For training and testing so it randomly choose
#between 1 to n and it will have 2/3rd of the data will be in training set, these are just indexes
x.train <- x[train_rows,] # this is for training of x
x.test <- x[-train_rows,] #this is for testing of x
y.train <- y[train_rows]# for y training
y.test <- y[-train_rows]# for y testing
alpha0.fit <- cv.glmnet(x.train,y.train,type.measure = "mse",alpha=0,family = "gaussian")
# We need to fit a model to the training  data and it is done by cv.glmnet()
# cv means cross validation to obtain optimal values of lambda it uses 10 fold cross validation
# by default. type.measure is how the cross validation will be evaluated and mse measns
# mean-squared error. alpha is set to 0 because it is ridge regression if it was lasso
# regression we would have used 1 any other in between would mean elastic net regression
# family is set to gaussian because it is a type of linear regression if we were doing
# logistic regression we would use binomial
alpha0.predicted <- predict(alpha0.fit,s=alpha0.fit$lambda.1se,newx = x.test)
mean((y.test - alpha0.predicted)^2)
shiny::runApp('C:/Users/Admin/Desktop/ICT/SEM-V/R Programming/Practicals/Practical 5/Practical_5')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/R Programming/Practicals/Practical 5/Practical_5')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/R Programming/Practicals/Practical 5/Practical_5')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/R Programming/Practicals/Practical 5/Practical_5')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/R Programming/Practicals/Practical 5/Practical_5')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/R Programming/Practicals/Practical 5/Practical_5')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/R Programming/Practicals/Practical 5/Practical_5')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/R Programming/Practicals/Practical 5/Practical_5')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/R Programming/Practicals/Practical 5/Practical_5')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/R Programming/Practicals/Practical 5/Practical_5')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/R Programming/Practicals/Practical 5/Practical_5')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/R Programming/Practicals/Practical 5/Practical_5')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/R Programming/Practicals/Practical 5/Practical_5')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/R Programming/Practicals/Practical 5/Practical_5')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/R Programming/Practicals/Practical 5/Practical_5')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/R Programming/Practicals/Practical 5/Practical_5')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/R Programming/Practicals/Practical 5/Practical_5')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/R Programming/Practicals/Practical 5/Practical_5')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/R Programming/Practicals/Practical 5/Practical_5')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/R Programming/Practicals/Practical 5/Practical_5')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/R Programming/Practicals/Practical 5/Practical_5')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/R Programming/Practicals/Practical 5/Practical_5')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/R Programming/Practicals/Practical 5/Practical_5')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/R Programming/Practicals/Practical 5/Practical_5')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/R Programming/Practicals/Practical 5/Practical_5')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/R Programming/Practicals/Practical 5/Practical_5')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/R Programming/Practicals/Practical 5/Practical_5')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/R Programming/Practicals/Practical 5/Practical_5')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/R Programming/Practicals/Practical 5/Practical_5')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/R Programming/Practicals/Practical 5/Practical_5')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/R Programming/Practicals/Practical 5/Practical_5')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/R Programming/Practicals/Practical 5/Practical_5')
$\6=$
num <- "12345678"
substr(num, 4, 5)
substr(num, 5, 7)
str <- "Big Data at ICT"
nchar(str)
strsplit("Learn Code Teach !", " ")
chartr("a", "A", "An honest man gave that")
str <- paste(c(1:3), "4", sep = ":")
print (str)
shiny::runApp('C:/Users/Admin/Desktop/ICT/SEM-V/Data Science & Modelling/Project/Logistic_Regression')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/Data Science & Modelling/Project/Logistic_Regression')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/Data Science & Modelling/Project/Logistic_Regression')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/Data Science & Modelling/Project/Logistic_Regression')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/Data Science & Modelling/Project/Logistic_Regression')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/Data Science & Modelling/Project/Logistic_Regression')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/Data Science & Modelling/Project/Logistic_Regression')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/Data Science & Modelling/Project/Logistic_Regression')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/Data Science & Modelling/Project/Logistic_Regression')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/Data Science & Modelling/Project/Logistic_Regression')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/Data Science & Modelling/Project/Logistic_Regression')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/Data Science & Modelling/Project/Logistic_Regression')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/Data Science & Modelling/Project/Logistic_Regression')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/Data Science & Modelling/Project/Logistic_Regression')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/Data Science & Modelling/Project/Logistic_Regression')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/Data Science & Modelling/Project/Logistic_Regression')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/Data Science & Modelling/Project/Logistic_Regression')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/Data Science & Modelling/Project/Logistic_Regression')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/Data Science & Modelling/Project/Logistic_Regression')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/Data Science & Modelling/Project/Logistic_Regression')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/Data Science & Modelling/Project/Logistic_Regression')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/Data Science & Modelling/Project/Logistic_Regression')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/Data Science & Modelling/Project/Logistic_Regression')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/Data Science & Modelling/Project/Logistic_Regression')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/Data Science & Modelling/Project/Logistic_Regression')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/Data Science & Modelling/Project/Logistic_Regression')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/Data Science & Modelling/Project/Logistic_Regression')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/Data Science & Modelling/Project/Logistic_Regression')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/Data Science & Modelling/Project/Logistic_Regression')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/Data Science & Modelling/Project/Logistic_Regression')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/Data Science & Modelling/Project/Logistic_Regression')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/Data Science & Modelling/Project/Logistic_Regression')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/Data Science & Modelling/Project/Logistic_Regression')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/Data Science & Modelling/Project/Logistic_Regression')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/Data Science & Modelling/Project/Logistic_Regression')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/Data Science & Modelling/Project/Logistic_Regression')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/Data Science & Modelling/Project/Logistic_Regression')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/Data Science & Modelling/Project/Logistic_Regression')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/Data Science & Modelling/Project/Logistic_Regression')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/Data Science & Modelling/Project/Logistic_Regression')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/Data Science & Modelling/Project/Logistic_Regression')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/Data Science & Modelling/Project/Logistic_Regression')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/Data Science & Modelling/Project/Logistic_Regression')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/Data Science & Modelling/Project/Logistic_Regression')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/Data Science & Modelling/Project/Logistic_Regression')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/Data Science & Modelling/Project/Logistic_Regression')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/Data Science & Modelling/Project/Logistic_Regression')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/Data Science & Modelling/Project/Logistic_Regression')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/Data Science & Modelling/Project/Logistic_Regression')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/Data Science & Modelling/Project/Logistic_Regression')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/Data Science & Modelling/Project/Logistic_Regression')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/Data Science & Modelling/Project/Logistic_Regression')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/Data Science & Modelling/Project/Logistic_Regression')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/Data Science & Modelling/Project/Logistic_Regression')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/Data Science & Modelling/Project/Logistic_Regression')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/Data Science & Modelling/Project/Logistic_Regression')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/Data Science & Modelling/Project/Logistic_Regression')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/Data Science & Modelling/Project/Logistic_Regression')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/Data Science & Modelling/Project/Logistic_Regression')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/Data Science & Modelling/Project/Logistic_Regression')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/Data Science & Modelling/Project/Logistic_Regression')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/Data Science & Modelling/Project/Logistic_Regression')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/Data Science & Modelling/Project/Logistic_Regression')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/Data Science & Modelling/Project/Logistic_Regression')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/Data Science & Modelling/Project/Logistic_Regression')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/Data Science & Modelling/Project/Logistic_Regression')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/Data Science & Modelling/Project/Logistic_Regression')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/Data Science & Modelling/Project/Logistic_Regression')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/Data Science & Modelling/Project/Logistic_Regression')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/Data Science & Modelling/Project/Logistic_Regression')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/Data Science & Modelling/Project/Logistic_Regression')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/Data Science & Modelling/Project/Logistic_Regression')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/Data Science & Modelling/Project/Logistic_Regression')
install.packages(c("ragg", "readr"))
shiny::runApp('C:/Users/Admin/Desktop/ICT/SEM-V/R Programming/Practicals/Practical 7/Practical-7_One-Way-ANOVA')
cat CRISPRAnalyzeR-shiny-20180731-091847-35115.log
CRISPRAnalyzeR-shiny-20180731-091847-35115.log
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/R Programming/Practicals/Practical 7/Practical-7_One-Way-ANOVA')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/R Programming/Practicals/Practical 7/Practical-7_One-Way-ANOVA')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/R Programming/Practicals/Practical 7/Practical-7_One-Way-ANOVA')
shiny::runApp('C:/Users/Admin/Desktop/ICT/SEM-V/R Programming/Practicals/Practical 7/Practical-7_One-Way-ANOVA')
shiny::runApp('C:/Users/Admin/Desktop/ICT/SEM-V/R Programming/Practicals/Practical 7/Practical-7_One-Way-ANOVA')
shiny::runApp('C:/Users/Admin/Desktop/ICT/SEM-V/R Programming/Practicals/Practical 7/Practical-7_One-Way-ANOVA')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/R Programming/Practicals/Practical 7/Practical-7_One-Way-ANOVA')
runApp('C:/Users/Admin/Desktop/ICT/SEM-V/R Programming/Practicals/Practical 7/Practical-7_One-Way-ANOVA')
setwd("C:/Users/Admin/Desktop/ICT/SEM-V/Data Science & Modelling/Project")
d <- read.csv('train.csv',header=T,na.strings=c(""))
summary(as.data.frame(d))
sapply(d,function(x) sum(is.na(x)))
sapply(d, function(x) length(unique(x)))
library(Amelia)
missmap(d, main = "Missing values vs observed")
data <- subset(d,select=c(2,3,5,6,7,8,10,12))
data$Age[is.na(data$Age)] <- mean(data$Age,na.rm=T)
data$Sex<-factor(data$Sex)
is.factor(data$Sex)
data$Embarked<-factor(data$Embarked)
is.factor(data$Embarked)
contrasts(as.factor(data$Sex))
contrasts(as.factor(data$Embarked))
data <- data[!is.na(data$Embarked),]
rownames(data) <- NULL
train <- data[1:800,]
test <- data[801:889,]
model <- glm(Survived ~.,family=binomial(link='logit'),data=train)
model
shiny::runApp('Logistic_Regression')
runApp('Logistic_Regression')
runApp('Logistic_Regression')
runApp('Logistic_Regression')
runApp('Logistic_Regression')
runApp('Logistic_Regression')
runApp('Logistic_Regression')
runApp('Logistic_Regression')
shiny::runApp()
